import{_ as s,c as a,o as n,Q as p}from"./chunks/framework.18ddace7.js";const F=JSON.parse('{"title":"不使用docker hub","description":"","frontmatter":{},"headers":[],"relativePath":"docker/docker-hub.md","lastUpdated":1684641383000}'),o={name:"docker/docker-hub.md"},l=p(`<h1 id="不使用docker-hub" tabindex="-1">不使用docker hub</h1><p>1 . 如果不想将Docker镜像推送到Docker Hub，可以通过以下步骤将其直接部署到Linux服务器：</p><p>将Docker镜像保存为.tar文件</p><p>您可以使用以下命令将Docker镜像保存为.tar文件：</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">save</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-o</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">image.tar</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">image_nam</span><span style="color:#E1E4E8;">e</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">save</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-o</span><span style="color:#24292E;"> </span><span style="color:#032F62;">image.tar</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">image_nam</span><span style="color:#24292E;">e</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>其中，&lt;image_name&gt;是您要保存的Docker镜像的名称。</p><p>2 .将.tar文件传输到目标Linux服务器</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">scp</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">image.tar</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">user@server_ip:/path/to/destination</span></span>
<span class="line"></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">scp</span><span style="color:#24292E;"> </span><span style="color:#032F62;">image.tar</span><span style="color:#24292E;"> </span><span style="color:#032F62;">user@server_ip:/path/to/destination</span></span>
<span class="line"></span></code></pre></div><p>其中，user是您在目标Linux服务器上的用户名，server_ip是目标Linux服务器的IP地址，/path/to/destination是您要将.tar文件传输到的目标路径。</p><p>3 .在目标Linux服务器上加载Docker镜像</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">load</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-i</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">image.tar</span></span>
<span class="line"></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">load</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-i</span><span style="color:#24292E;"> </span><span style="color:#032F62;">image.tar</span></span>
<span class="line"></span></code></pre></div><p>4 . 运行Docker容器</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">option</span><span style="color:#E1E4E8;">s</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">image_nam</span><span style="color:#E1E4E8;">e</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">option</span><span style="color:#24292E;">s</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">image_nam</span><span style="color:#24292E;">e</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>其中，<code>&lt;options&gt;</code>是您想要传递给Docker容器的选项（例如，端口映射、环境变量等），<code>&lt;image_name&gt;</code>是您要在Docker容器中运行的镜像名称。</p>`,14),e=[l];function t(c,r,i,d,y,E){return n(),a("div",null,e)}const h=s(o,[["render",t]]);export{F as __pageData,h as default};
